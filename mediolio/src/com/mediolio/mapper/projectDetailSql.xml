<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="pd">
  	
	<select id="getReplyList" parameterType="int" resultType="rvo">
		SELECT r.r_id, r.m_id, r.p_id, r.r_text, DATE_FORMAT(r.r_date, '%Y.%m.%d %H:%i:%s') AS r_date, m.m_studentID, m.m_name 
			FROM reply r JOIN member m ON r.m_id=m.m_id 
			WHERE r.p_id=#{p_id} ORDER BY p_id DESC
	</select>
	
  	<select id="projectDetailRelatedProject" parameterType="int" resultType="pdvo">
	  	SELECT p.p_id, p.p_type, p.p_title, p.p_prjname, p.p_summary, p.cl_id, c.cl_name,
	  	DATE_FORMAT(p.p_workfrom, '%Y.%m.%d') AS p_workfrom, DATE_FORMAT(p.p_workto, '%Y.%m.%d') AS p_workto,
	  		p.ht_id, p.cate_id, ct.cate_name, DATE_FORMAT(p.p_date, '%Y.%m.%d %H:%i:%s') AS p_date, p.p_viewnum,
	  		(SELECT count(*) FROM member_action WHERE act_type='like' AND act_what=#{p_id}) p_likenum
	  			FROM project p, class c, category ct WHERE p.cl_id = c.cl_id AND p.cate_id = ct.cate_id
	  			AND p.p_id=#{p_id}
  	</select>
  	
  	<select id="projectDetailRelatedMember" parameterType="java.util.Map" resultType="pwvo">
  		SELECT m.m_id, m.m_studentID, m.m_name, m.m_introduce, m.m_interesting1, m.m_interesting2,
  			(SELECT cate_name FROM category WHERE cate_id = m.m_interesting1) AS m_interesting1_text,
  			(SELECT cate_name FROM category WHERE cate_id = m.m_interesting2) AS m_interesting2_text,
  			(SELECT count(*) FROM member_action WHERE act_type='like' AND act_what=#{p_id} AND act_from=#{m_id}) like_or_not
  			FROM member m WHERE m.m_id=#{p_m_id}
  	</select>
  	
  	<select id="projectHash" parameterType="int" resultType="hvo">
  		SELECT h_id, h_value FROM hashtag WHERE p_id=#{p_id}
  	</select>
  	
  	<select id="getTeamMember" parameterType="int" resultType="tmvo">
  		SELECT t.p_id, t.m_id, t.tm_role, t.tm_detail, m.m_studentID, m.m_name 
  			FROM teammember t, member m WHERE t.m_id=m.m_id AND p_id=#{p_id}
  	</select>
  	
  	<insert id="submitReply" parameterType="rvo" useGeneratedKeys="true" keyProperty="r_id">
		INSERT INTO reply (m_id, r_text, r_date, p_id) values (#{m_id}, #{r_text}, now(), #{p_id})
	</insert>
	
	<insert id="actionReplySumbitted" parameterType="mavo">
		INSERT INTO member_action (act_type, act_to, act_from, act_what, act_date, act_read) VALUES ('reply', #{act_to}, #{act_from}, #{act_what}, now(), 0)
	</insert>
	
	<select id="selectInsertedReply" parameterType="int" resultType="rvo">
		SELECT r.r_id, r.m_id, r.p_id, r.r_text, DATE_FORMAT(r.r_date, '%Y.%m.%d %H:%i:%s') AS r_date, m.m_studentID, m.m_name 
			FROM reply r JOIN member m ON r.m_id=m.m_id
			WHERE r_id = #{r_id}
	</select>
	
	<delete id="deleteReply" parameterType="int">
		DELETE FROM reply WHERE r_id=#{r_id}
	</delete>
	
	<delete id="actionDeleteReply" parameterType="int">
		DELETE FROM member_action WHERE act_type='reply' AND act_what=#{r_id}
	</delete>
	
	<select id="projectContents" parameterType="int" resultType="covo">
		select c_type, c_value, c_order from content where p_id=#{p_id} order by c_order asc
	</select>
	
	<update id="increaseHits" parameterType="int">
		update project set p_viewnum=p_viewnum+1 where p_id=#{p_id}
	</update>
  </mapper>
	