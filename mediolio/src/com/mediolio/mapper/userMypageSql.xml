<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="userpage">
  
  
  <!-- !!!!!!!!!!!!!      오지은 작성        !!!!!!!!!!!!!!!! -->
  
  <!-- 유저의 id를 기반으로 해당 유저의 정보를 받아오는 쿼리문  -->
    <select id="getMemberInfo" parameterType="int" resultType="fvo">
		SELECT m_id, m_studentID, m_name, m_introduce, m_interesting1, m.m_interesting2,
			(SELECT c.cate_name FROM category c WHERE c.cate_id=m_interesting1) AS m_interestingText1,
			(SELECT c.cate_name FROM category c WHERE c.cate_id=m_interesting2) AS m_interestingText2,
			(SELECT GROUP_CONCAT(sk.sk_name SEPARATOR ', ') FROM memberskill mk, skills sk WHERE mk.sk_id=sk.sk_id AND mk.m_id=m.m_id) AS skills
				FROM member m WHERE m_id=#{m_id}
	</select>
	
	<!-- 유저의 id를 기반으로 해당 유저가 업로드한 프로젝트들을 받아오는 쿼리문. 한 번에 6개만.  -->
	<select id="getProjectsUploaded" parameterType="int" resultType="upvo">
		SELECT * FROM (
			SELECT @NO := @NO + 1 AS ROWNUM, A.*
				FROM(
					SELECT p_id AS project_id, m_id, p_title, p_coverImg, cate_id AS category_id,
						(SELECT cate_name FROM category WHERE cate_id = category_id) AS cate_name,
					    (SELECT SUBSTRING_INDEX(GROUP_CONCAT(h_value SEPARATOR ','), ',', 3) FROM hashtag WHERE p_id=project_id) AS hashtags
							FROM project WHERE m_id=#{m_id}
				) A,
			  (SELECT @NO := 0 ) B
			) C
		WHERE C.ROWNUM <![CDATA[>=]]> 1 AND C.ROWNUM <![CDATA[<=]]> 6
	</select>
  
   <!-- 유저의 id를 기반으로 해당 유저가 좋아요 누른 프로젝트들을 받아오는 쿼리문. 한 번에 6개만.  -->
  	<select id="getProjectsLiked" parameterType="int" resultType="upvo">
		SELECT * FROM (
			SELECT @NO := @NO + 1 AS ROWNUM, A.*
				FROM(
					SELECT p.p_id AS project_id, p.m_id, p.p_title, p.p_coverImg, p.cate_id AS category_id,
						(SELECT cate_name FROM category WHERE cate_id = category_id) AS cate_name,
						(SELECT SUBSTRING_INDEX(GROUP_CONCAT(h_value SEPARATOR ','), ',', 3) FROM hashtag WHERE p_id=project_id) AS hashtags
							FROM project p, member_action ma 
			                WHERE ma.act_to=p.m_id AND ma.act_what=p.p_id AND ma.act_type='like' AND ma.act_from=#{m_id}
				) A,
			  (SELECT @NO := 0 ) B
			) C
		WHERE C.ROWNUM <![CDATA[>=]]> 1 AND C.ROWNUM <![CDATA[<=]]> 6
	</select>
  </mapper>